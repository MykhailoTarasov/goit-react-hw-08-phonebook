{"version":3,"file":"static/js/137.86b777f8.chunk.js","mappings":"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","sources":["components/Loader/Loader.Styled.js","components/Loader/Loader.js","components/ContactForm/ContactForm.Styled.js","components/ContactForm/ContactForm.js","components/CustomerModal/CustomerModal.Styled.js","components/CustomerModal/CustomerModal.js","components/Contact/Contact.Styled.js","components/Contact/Contact.js","components/ContactList/ContactList.Styled.js","components/ContactList/ContactList.js","components/Filter/FIlter.Styled.js","components/Filter/Filter.js","pages/Contacts.js","redux/contacts/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledLoader = styled.div`\nmargin-top: 10px;\n`","import { Hourglass } from 'react-loader-spinner';\nimport { StyledLoader } from './Loader.Styled';\n\nconst Loader = () => {\n    return (\n        <StyledLoader>\n            <Hourglass\n            visible={true}\n            height=\"40\"\n            width=\"40\"\n            ariaLabel=\"hourglass-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            colors={['#5dd7d2', '#5dd7d2']}\n          />\n        </StyledLoader>\n    )\n}\n\nexport default Loader;","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport { FaUser } from 'react-icons/fa';\nimport { FaPhone } from 'react-icons/fa';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n\n  gap: 16px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n\n  padding: 15px;\n  background-color: #5dd7d2;\n  border: 1px solid #0daea7;\n  border-radius: 5px;\n  box-shadow: gray 1px 1px 5px;\n`;\n\nexport const ErrMessageStyled = styled(ErrorMessage)`\n  color: red;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 200px;\n  height: 40px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  border-radius: 4px;\n  margin: 0;\n  padding-left: 35px;\n`;\n\nexport const Button = styled.button`\n  width: 120px;\n  align-self: center;\n  padding: 10px;\n  color: white;\n  background-color: #4d83c2;\n  cursor: pointer;\n\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n`;\n\nexport const Label = styled.label`\n  position: relative;\n`;\n\nexport const UserIcon = styled(FaUser)`\n  position: absolute;\n  top: 13px;\n  left: 10px;\n  color: #4d83c2;\n`;\n\nexport const PhoneIcon = styled(FaPhone)`\n  position: absolute;\n  top: 13px;\n  left: 10px;\n  color: #4d83c2;\n`;\n\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Button,\n  Container,\n  ErrMessageStyled,\n  Label,\n  PhoneIcon,\n  StyledField,\n  StyledForm,\n  UserIcon,\n} from './ContactForm.Styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport { Notify } from 'notiflix';\n\n\nconst validation = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('This is a required field'),\n  number: Yup.string()\n    .matches(\n      /^\\+?\\d{1,4}?[ .\\-s]?(\\(\\d{1,3}?\\))?([ .\\-s]?\\d{1,4}){1,4}$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('This is a required field')\n    .min(9, 'Please enter at least 9 characters'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const handleSubmit = (values, actions) => {\n    const nameExists = contacts.some(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n    if (nameExists) {\n      return Notify.failure(`${values.name} is already in contacts`);\n    } else {\n      dispatch(addContact(values));\n      Notify.success(`${values.name} added to contacts`);\n      actions.resetForm({ name: '', number: '' });\n    }\n  };\n\n  return (\n    <Container>\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={validation}\n      onSubmit={handleSubmit}\n    >\n      <StyledForm>\n        <Label>\n          <UserIcon />\n          <StyledField name=\"name\" placeholder=\"Name\" />\n          <ErrMessageStyled name=\"name\" component=\"div\" />\n        </Label>\n\n        <Label>\n          <PhoneIcon />\n          <StyledField name=\"number\" placeholder=\"Number\" />\n          <ErrMessageStyled name=\"number\" component=\"div\" />\n        </Label>\n\n        <Button type=\"submit\">Add contact</Button>\n      </StyledForm>\n    </Formik>\n  </Container>\n  )\n}\n\n\n\nexport default ContactForm;","import styled from 'styled-components';\nimport Modal from 'react-modal';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const ModalBox = styled.div`\nmargin-left: auto;\nmargin-right: auto;\npadding: 20px;\nmargin-top: 15px;\nbackgroung-color: #8df2ee;\n`\n\nexport const StyledModal = styled(Modal)`\nwidth: 500px;\n\n`\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n\n  gap: 16px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n\n  padding: 15px;\n  background-color: #5dd7d2;\n  border: 1px solid #0daea7;\n  border-radius: 5px;\n  box-shadow: gray 1px 1px 5px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ErrMessageStyled = styled(ErrorMessage)`\n  color: red;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 200px;\n  height: 40px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  border-radius: 4px;\n  margin: 0;\n  padding-left: 35px;\n`;\n\nexport const Button = styled.button`\n  width: 120px;\n  align-self: center;\n  padding: 10px;\n  color: white;\n  background-color: #4d83c2;\n  cursor: pointer;\n\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n`;","import * as Yup from 'yup';\nimport Modal from 'react-modal';\nimport { useDispatch } from 'react-redux';\nimport { updateContact } from '../../redux/contacts/operations';\nimport { Notify } from 'notiflix';\nimport { Formik } from 'formik';\nimport {\n  Button,\n  Container,\n  ErrMessageStyled,\n  Label,\n  ModalBox,\n  StyledField,\n  StyledForm,\n  StyledModal,\n} from './CustomerModal.Styled';\n\nconst ContactShema = Yup.object().shape({\n  name: Yup.string()\n    .trim()\n    .min(2, 'Too Short!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('This is a required field'),\n  number: Yup.string()\n    .trim()\n    .matches(\n      /^\\+?\\d{1,4}?[ .\\-s]?(\\(\\d{1,3}?\\))?([ .\\-s]?\\d{1,4}){1,4}$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('This is a required field')\n    .min(9, 'Please enter at least 9 characters'),\n});\n\nModal.setAppElement('#root');\n\nexport const CustomModalForm = ({ isOpen, onClose, userId, customStyles }) => {\n  const dispatch = useDispatch();\n  const handleSubmit = async (values, actions) => {\n    const newData = {\n      id: userId,\n      data: values,\n    };\n    dispatch(updateContact(newData));\n    Notify.success(`Contact updated`);\n    actions.resetForm({ name: '', number: '' });\n    onClose();\n  };\n\n  return (\n    <ModalBox>\n      <StyledModal\n        isOpen={isOpen}\n        onRequestClose={onClose}\n        style={customStyles}\n        contentLabel=\"Modal Form\"\n      >\n        <button onClick={onClose}>&times;</button>\n        <h2>Please, enter new contact details:</h2>\n        <Container>\n          <Formik\n            initialValues={{ name: '', number: '' }}\n            onSubmit={(values, actions) => {\n              handleSubmit(values, actions);\n            }}\n            validationSchema={ContactShema}\n          >\n            <StyledForm>\n              <Label>\n                <StyledField name=\"name\" type=\"text\" placeholder=\"Name\" />\n                <ErrMessageStyled name=\"name\" component=\"span\" />\n              </Label>\n\n              <Label>\n                <StyledField name=\"number\" type=\"tel\" placeholder=\"Number\" />\n                <ErrMessageStyled name=\"number\" component=\"span\" />\n              </Label>\n              <Button type=\"submit\">Update contact</Button>\n            </StyledForm>\n          </Formik>\n        </Container>\n      </StyledModal>\n    </ModalBox>\n  );\n};\n","import styled from 'styled-components';\nimport { FaTrashCan } from 'react-icons/fa6';\nimport { GrDocumentUpdate } from \"react-icons/gr\";\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 15px;\n  max-width: 100%;\n\n  background-color: #5dd7d2;\n  border: 1px solid #0daea7;\n  border-radius: 5px;\n  box-shadow: gray 1px 1px 5px;\n\n  margin: 0;\n  padding: 10px;\n  list-style: none;\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const ButtonItem = styled.button`\n  position: relative;\n\n  width: 30px;\n  height: 30px;\n  align-self: center;\n\n  padding: 10px;\n  color: white;\n  background-color: #4d83c2;\n  cursor: pointer;\n\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n`;\n\nexport const DeleteIcon = styled(FaTrashCan)`\n  position: absolute;\n  transform: translate(-50%, -50%);\n`;\n\nexport const UpdateIcon = styled(GrDocumentUpdate)`\n  position: absolute;\n  transform: translate(-50%, -50%);\n\n`;\n\nexport const Text = styled.span`\n  margin: 0;\n  text-shadow: grey 2px 2px 5px;\n  font-weight: 500;\n`;\n\nexport const ButtonBox = styled.div`\ndisplay: flex;\ngap: 15px;\n`","import { CustomModalForm } from 'components/CustomerModal/CustomerModal';\nimport { Notify } from 'notiflix';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport {\n  ButtonBox,\n  ButtonItem,\n  DeleteIcon,\n  ListItem,\n  Text,\n  UpdateIcon,\n} from './Contact.Styled';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handlerOnClick = id => {\n    dispatch(deleteContact(id));\n    Notify.success(`Contact deleted`);\n  };\n\n  return (\n    <ListItem>\n      <Text>\n        {name}: {number}\n      </Text>\n      <ButtonBox>\n        <ButtonItem type=\"button\" onClick={() => handlerOnClick(id)}>\n          <DeleteIcon />\n        </ButtonItem>\n        <ButtonItem type=\"button\" onClick={openModal}>\n          <UpdateIcon />\n        </ButtonItem>\n      </ButtonBox>\n      {isModalOpen && (\n        <CustomModalForm\n          isOpen={isModalOpen}\n          onClose={closeModal}\n          userId={id}\n        />\n      )}\n    </ListItem>\n  );\n};\n","import styled from 'styled-components';\nimport { FaTrashCan } from 'react-icons/fa6';\n\nexport const List = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin-bottom: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 15px;\n  max-width: 100%;\n\n  background-color: #5dd7d2;\n  border: 1px solid #0daea7;\n  border-radius: 5px;\n  box-shadow: gray 1px 1px 5px;\n\n  margin: 0;\n  padding: 10px;\n  list-style: none;\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const ButtonItem = styled.button`\n  position: relative;\n\n  width: 30px;\n  height: 30px;\n  align-self: center;\n\n  padding: 10px;\n  color: white;\n  background-color: #4d83c2;\n  cursor: pointer;\n\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n`;\n\nexport const DeleteIcon = styled(FaTrashCan)`\n  position: absolute;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  text-shadow: grey 2px 2px 5px;\n  font-weight: 500;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\nimport { Contact } from 'components/Contact/Contact';\nimport { List } from './ContactList.Styled';\n\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  return (\n    <List>\n      {visibleContacts.map(user => (\n        <Contact\n          key={user.id}\n          id={user.id}\n          name={user.name}\n          number={user.number}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  text-allign: center;\n  padding-bottom: 20px;\n  padding-top: 20px;\n`;\n\nexport const FilterTitle = styled.h3`\n  text-allign: center;\n  padding: 0 0 15px 0;\n  margin: 0;\n  text-shadow: grey 2px 2px 5px;\n`;\n\nexport const FilterInput = styled.input`\n  width: 200px;\n  height: 40px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  margin: 0;\n  padding-left: 10px;\n`;","import { useDispatch, useSelector } from \"react-redux\";\nimport { setFilter } from \"../../redux/contacts/filterSlice\";\nimport { selectFilter } from \"../../redux/contacts/selectors\";\nimport { FilterContainer, FilterInput, FilterTitle } from \"./FIlter.Styled\";\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onChangeFilter = evt => {\n    dispatch(setFilter(evt.target.value.trim()));\n  };\n\n  return (\n    <FilterContainer>\n      <FilterTitle>Find contact by name</FilterTitle>\n      <FilterInput\n        type=\"text\"\n        value={filter}\n        placeholder=\"Find by name\"\n        onChange={onChangeFilter}\n      />\n    </FilterContainer>\n  );\n};\n\nexport default Filter;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport Loader from '../components/Loader/Loader';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { selectContacts, selectError, selectIsLoading } from '../redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      {isLoading && <Loader/>}\n      {contacts.length ? (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      ) : (\n        <p>Phonebook is empty</p>\n      )}\n      {error && <span>Error! Please, reload this page!</span>}\n    </div>\n  );\n}","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);"],"names":["StyledLoader","styled","_templateObject","_taggedTemplateLiteral","_jsx","children","Hourglass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","StyledForm","Form","Container","_templateObject2","ErrMessageStyled","ErrorMessage","_templateObject3","StyledField","Field","_templateObject4","Button","_templateObject5","Label","_templateObject6","UserIcon","FaUser","_templateObject7","PhoneIcon","FaPhone","_templateObject8","validation","Yup","shape","name","min","matches","required","number","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","Formik","initialValues","validationSchema","onSubmit","values","actions","some","contact","toLowerCase","Notify","concat","addContact","resetForm","_jsxs","placeholder","component","type","ModalBox","StyledModal","Modal","ContactShema","trim","CustomModalForm","_ref","isOpen","onClose","userId","customStyles","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","newData","_context","prev","next","id","data","updateContact","stop","_x","_x2","apply","arguments","onRequestClose","style","contentLabel","onClick","ListItem","ButtonItem","DeleteIcon","FaTrashCan","UpdateIcon","GrDocumentUpdate","Text","ButtonBox","Contact","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","deleteContact","handlerOnClick","List","visibleContacts","selectVisibleContacts","map","user","FilterContainer","FilterTitle","FilterInput","filter","selectFilter","value","onChange","evt","setFilter","target","Contacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","Helmet","Loader","length","_Fragment","Filter","ContactList","state","items","createSelector","includes"],"sourceRoot":""}