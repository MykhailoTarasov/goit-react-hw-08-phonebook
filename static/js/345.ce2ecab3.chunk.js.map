{"version":3,"file":"static/js/345.ce2ecab3.chunk.js","mappings":"gMAEaA,E,QAAeC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6B,SCiBtC,EAhBe,WACX,OACIC,EAAAA,EAAAA,KAACJ,EAAY,CAAAK,UACTD,EAAAA,EAAAA,KAACE,EAAAA,GAAS,CACVC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,oBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,OAAQ,CAAC,UAAW,cAIhC,C,wKCZaC,GAAab,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uEAOzBa,EAAYf,EAAAA,GAAAA,IAAUgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,gMAWtBe,GAAmBjB,EAAAA,EAAAA,IAAOkB,EAAAA,GAAPlB,CAAoBmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,yBAIvCkB,GAAcpB,EAAAA,EAAAA,IAAOqB,EAAAA,GAAPrB,CAAasB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,qMAU3BqB,EAASvB,EAAAA,GAAAA,OAAawB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,6PAatBuB,EAAQzB,EAAAA,GAAAA,MAAY0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,iCAIpByB,GAAW3B,EAAAA,EAAAA,IAAO4B,EAAAA,IAAP5B,CAAc6B,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,iFAOzB4B,GAAY9B,EAAAA,EAAAA,IAAO+B,EAAAA,IAAP/B,CAAegC,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,iF,uCC3ClC+B,EAAaC,EAAAA,KAAaC,MAAM,CACpCC,KAAMF,EAAAA,KACHG,IAAI,EAAG,cACPC,QACC,sHACA,0IAEDC,SAAS,4BACZC,OAAQN,EAAAA,KACLI,QACC,6DACA,gGAEDC,SAAS,4BACTF,IAAI,EAAG,wCAGCI,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAc7B,OACE3C,EAAAA,EAAAA,KAACY,EAAS,CAAAX,UACVD,EAAAA,EAAAA,KAAC4C,EAAAA,GAAM,CACLC,cAAe,CACbZ,KAAM,GACNI,OAAQ,IAEVS,iBAAkBhB,EAClBiB,SArBiB,SAACC,EAAQC,GAI5B,GAHmBR,EAASS,MAC1B,SAAAC,GAAO,OAAIA,EAAQlB,KAAKmB,gBAAkBJ,EAAOf,KAAKmB,aAAa,IAGnE,OAAOC,EAAAA,OAAAA,QAAe,GAADC,OAAIN,EAAOf,KAAI,4BAEpCM,GAASgB,EAAAA,EAAAA,IAAWP,IACpBK,EAAAA,OAAAA,QAAe,GAADC,OAAIN,EAAOf,KAAI,uBAC7BgB,EAAQO,UAAU,CAAEvB,KAAM,GAAII,OAAQ,IAE1C,EAU2BpC,UAEvBwD,EAAAA,EAAAA,MAAC/C,EAAU,CAAAT,SAAA,EACTwD,EAAAA,EAAAA,MAACnC,EAAK,CAAArB,SAAA,EACJD,EAAAA,EAAAA,KAACwB,EAAQ,KACTxB,EAAAA,EAAAA,KAACiB,EAAW,CAACgB,KAAK,OAAOyB,YAAY,UACrC1D,EAAAA,EAAAA,KAACc,EAAgB,CAACmB,KAAK,OAAO0B,UAAU,YAG1CF,EAAAA,EAAAA,MAACnC,EAAK,CAAArB,SAAA,EACJD,EAAAA,EAAAA,KAAC2B,EAAS,KACV3B,EAAAA,EAAAA,KAACiB,EAAW,CAACgB,KAAK,SAASyB,YAAY,YACvC1D,EAAAA,EAAAA,KAACc,EAAgB,CAACmB,KAAK,SAAS0B,UAAU,YAG5C3D,EAAAA,EAAAA,KAACoB,EAAM,CAACwC,KAAK,SAAQ3D,SAAC,sBAK9B,E,oECxEM4D,EAAe9B,EAAAA,KAAaC,MAAM,CACpCC,KAAMF,EAAAA,KACH+B,OACA5B,IAAI,EAAG,cACPC,QACC,sHACA,0IAEDC,SAAS,4BACZC,OAAQN,EAAAA,KACL+B,OACA3B,QACC,6DACA,gGAEDC,SAAS,4BACTF,IAAI,EAAG,wCAGZ6B,IAAAA,cAAoB,SAEb,I,wBAAMC,EAAkB,SAAHC,GAAmD,IAA7CC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAASC,EAAMH,EAANG,OAAQC,EAAYJ,EAAZI,aACnD9B,GAAWC,EAAAA,EAAAA,MACX8B,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAO1B,EAAQC,GAAO,IAAA0B,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnCH,EAAU,CACdI,GAAIX,EACJY,KAAMhC,GAERT,GAAS0C,EAAAA,EAAAA,IAAcN,IACvBtB,EAAAA,OAAAA,QAAe,mBACfJ,EAAQO,UAAU,CAAEvB,KAAM,GAAII,OAAQ,KACtC8B,IAAU,wBAAAS,EAAAM,OAAA,GAAAR,EAAA,KACX,gBATiBS,EAAAC,GAAA,OAAAb,EAAAc,MAAA,KAAAC,UAAA,KAWlB,OACE7B,EAAAA,EAAAA,MAACM,IAAK,CACJG,OAAQA,EACRqB,eAAgBpB,EAChBqB,MAAOnB,EACPoB,aAAa,aAAYxF,SAAA,EAEzBD,EAAAA,EAAAA,KAAA,UAAQ0F,QAASvB,EAAQlE,SAAC,UAC1BD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,wCACJD,EAAAA,EAAAA,KAAC4C,EAAAA,GAAM,CACLC,cAAe,CAAEZ,KAAM,GAAII,OAAQ,IACnCU,SAAU,SAACC,EAAQC,GACjBqB,EAAatB,EAAQC,EACvB,EACAH,iBAAkBe,EAAa5D,UAE/BwD,EAAAA,EAAAA,MAAC9C,EAAAA,GAAI,CAAAV,SAAA,EACHwD,EAAAA,EAAAA,MAAA,SAAAxD,SAAA,CAAO,QAELD,EAAAA,EAAAA,KAACkB,EAAAA,GAAK,CAACe,KAAK,OAAO2B,KAAK,UACxB5D,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CAACkB,KAAK,OAAO0B,UAAU,aAEtCF,EAAAA,EAAAA,MAAA,SAAAxD,SAAA,CAAO,UAELD,EAAAA,EAAAA,KAACkB,EAAAA,GAAK,CAACe,KAAK,SAAS2B,KAAK,SAC1B5D,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CAACkB,KAAK,SAAS0B,UAAU,aAExC3D,EAAAA,EAAAA,KAAA,UAAQ4D,KAAK,SAAQ3D,SAAC,0BAOhC,E,UCxEW0F,GAAW9F,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uVAqBpB6F,GAAa/F,EAAAA,GAAAA,OAAagB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,wSAsB1B8F,KALahG,EAAAA,EAAAA,IAAOiG,GAAAA,IAAPjG,CAAkBmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,sEAKxBF,EAAAA,GAAAA,KAAWsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,gFCvClBgG,GAAU,SAAH9B,GAA8B,IAAxBc,EAAEd,EAAFc,GAAI9C,EAAIgC,EAAJhC,KAAMI,EAAM4B,EAAN5B,OAC5BE,GAAWC,EAAAA,EAAAA,MACjBwD,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAelC,OACElG,EAAAA,EAAAA,KAAA,OAAAC,UACEwD,EAAAA,EAAAA,MAACkC,GAAQ,CAAA1F,SAAA,EACPwD,EAAAA,EAAAA,MAACoC,GAAI,CAAA5F,SAAA,CACFgC,EAAK,KAAGI,MAEXrC,EAAAA,EAAAA,KAAC4F,GAAU,CAAChC,KAAK,SAAS8B,QAAS,kBAXlB,SAAAX,GACrBxC,GAAS+D,EAAAA,EAAAA,IAAcvB,IACvB1B,EAAAA,OAAAA,QAAe,kBACjB,CAQ+CkD,CAAexB,EAAG,EAAC9E,SAAC,YAG7DD,EAAAA,EAAAA,KAAA,UAAQ4D,KAAK,SAAS8B,QAtBV,WAChBW,GAAe,EACjB,EAoB+CpG,SAAC,WAGzCmG,IACCpG,EAAAA,EAAAA,KAACgE,EAAe,CACdE,OAAQkC,EACRjC,QAxBS,WACjBkC,GAAe,EACjB,EAuBUjC,OAAQW,QAMpB,EC3CayB,GAAO3G,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8HCmB7B,IDVwBF,EAAAA,GAAAA,GAASgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,uVAqBPF,EAAAA,GAAAA,OAAamB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,ySAiBbF,EAAAA,EAAAA,IAAOiG,GAAAA,IAAPjG,CAAkBsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,sEAKxBF,EAAAA,GAAAA,EAAQwB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,+ECjDR,WAClB,IAAM0G,GAAkB/D,EAAAA,EAAAA,IAAYgE,EAAAA,IACpC,OACE1G,EAAAA,EAAAA,KAACwG,GAAI,CAAAvG,SACFwG,EAAgBE,KAAI,SAAAC,GAAI,OACvB5G,EAAAA,EAAAA,KAAC+F,GAAO,CAENhB,GAAI6B,EAAK7B,GACT9C,KAAM2E,EAAK3E,KACXI,OAAQuE,EAAKvE,QAHRuE,EAAK7B,GAIV,KAIV,G,WClBa8B,GAAkBhH,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yKAU5B+G,GAAcjH,EAAAA,GAAAA,GAASgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,0GAOvBgH,GAAclH,EAAAA,GAAAA,MAAYmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,qMCOvC,GArBe,WACb,IAAMwC,GAAWC,EAAAA,EAAAA,MACXwE,GAAStE,EAAAA,EAAAA,IAAYuE,EAAAA,IAM3B,OACExD,EAAAA,EAAAA,MAACoD,GAAe,CAAA5G,SAAA,EACdD,EAAAA,EAAAA,KAAC8G,GAAW,CAAA7G,SAAC,0BACbD,EAAAA,EAAAA,KAAC+G,GAAW,CACVnD,KAAK,OACLsD,MAAOF,EACPtD,YAAY,eACZyD,SAXiB,SAAAC,GACrB7E,GAAS8E,EAAAA,GAAAA,GAAUD,EAAIE,OAAOJ,MAAMpD,QACtC,MAaF,ECde,SAASyD,KACtB,IAAMhF,GAAWC,EAAAA,EAAAA,MACXgF,GAAY9E,EAAAA,EAAAA,IAAY+E,EAAAA,IACxBhF,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvB+E,GAAQhF,EAAAA,EAAAA,IAAYiF,EAAAA,IAM1B,OAJAC,EAAAA,EAAAA,YAAU,WACRrF,GAASsF,EAAAA,EAAAA,MACX,GAAG,CAACtF,KAGFkB,EAAAA,EAAAA,MAAA,OAAAxD,SAAA,EACED,EAAAA,EAAAA,KAAC8H,EAAAA,EAAM,CAAA7H,UACLD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,qBAETD,EAAAA,EAAAA,KAACsC,EAAW,IACXkF,IAAaxH,EAAAA,EAAAA,KAAC+H,EAAAA,EAAM,IACpBtF,EAASuF,QACRvE,EAAAA,EAAAA,MAAAwE,EAAAA,SAAA,CAAAhI,SAAA,EACED,EAAAA,EAAAA,KAACkI,GAAM,KACPlI,EAAAA,EAAAA,KAACmI,GAAW,QAGdnI,EAAAA,EAAAA,KAAA,KAAAC,SAAG,uBAEJyH,IAAS1H,EAAAA,EAAAA,KAAA,QAAAC,SAAM,uCAGtB,C,sKCpCa0C,EAAiB,SAAAyF,GAAK,OAAIA,EAAM3F,SAAS4F,KAAM,EAC/CZ,EAAkB,SAAAW,GAAK,OAAIA,EAAM3F,SAAS+E,SAAU,EACpDG,EAAc,SAAAS,GAAK,OAAIA,EAAM3F,SAASiF,KAAM,EAC5CT,EAAe,SAAAmB,GAAK,OAAIA,EAAMpB,OAAOA,MAAO,EAE5CN,GAAwB4B,EAAAA,EAAAA,IACnC,CAAC3F,EAAgBsE,IACjB,SAACxE,EAAUuE,GACT,OAAOvE,EAASuE,QAAO,SAAA7D,GAAO,OAC5BA,EAAQlB,KAAKmB,cAAcmF,SAASvB,EAAO5D,cAAc,GAE7D,G","sources":["components/Loader/Loader.Styled.js","components/Loader/Loader.js","components/ContactForm/ContactForm.Styled.js","components/ContactForm/ContactForm.js","components/CustomerModal/CustomerModal.js","components/Contact/Contact.Styled.js","components/Contact/Contact.js","components/ContactList/ContactList.Styled.js","components/ContactList/ContactList.js","components/Filter/FIlter.Styled.js","components/Filter/Filter.js","pages/Contacts.js","redux/contacts/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledLoader = styled.div`\nmargin-top: 10px;\n`","import { Hourglass } from 'react-loader-spinner';\nimport { StyledLoader } from './Loader.Styled';\n\nconst Loader = () => {\n    return (\n        <StyledLoader>\n            <Hourglass\n            visible={true}\n            height=\"40\"\n            width=\"40\"\n            ariaLabel=\"hourglass-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            colors={['#5dd7d2', '#5dd7d2']}\n          />\n        </StyledLoader>\n    )\n}\n\nexport default Loader;","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport { FaUser } from 'react-icons/fa';\nimport { FaPhone } from 'react-icons/fa';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n\n  gap: 16px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n\n  padding: 15px;\n  background-color: #5dd7d2;\n  border: 1px solid #0daea7;\n  border-radius: 5px;\n  box-shadow: gray 1px 1px 5px;\n`;\n\nexport const ErrMessageStyled = styled(ErrorMessage)`\n  color: red;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 200px;\n  height: 40px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  border-radius: 4px;\n  margin: 0;\n  padding-left: 35px;\n`;\n\nexport const Button = styled.button`\n  width: 120px;\n  align-self: center;\n  padding: 10px;\n  color: white;\n  background-color: #4d83c2;\n  cursor: pointer;\n\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n`;\n\nexport const Label = styled.label`\n  position: relative;\n`;\n\nexport const UserIcon = styled(FaUser)`\n  position: absolute;\n  top: 13px;\n  left: 10px;\n  color: #4d83c2;\n`;\n\nexport const PhoneIcon = styled(FaPhone)`\n  position: absolute;\n  top: 13px;\n  left: 10px;\n  color: #4d83c2;\n`;\n\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Button,\n  Container,\n  ErrMessageStyled,\n  Label,\n  PhoneIcon,\n  StyledField,\n  StyledForm,\n  UserIcon,\n} from './ContactForm.Styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport { Notify } from 'notiflix';\n\n\nconst validation = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('This is a required field'),\n  number: Yup.string()\n    .matches(\n      /^\\+?\\d{1,4}?[ .\\-s]?(\\(\\d{1,3}?\\))?([ .\\-s]?\\d{1,4}){1,4}$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('This is a required field')\n    .min(9, 'Please enter at least 9 characters'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const handleSubmit = (values, actions) => {\n    const nameExists = contacts.some(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n    if (nameExists) {\n      return Notify.failure(`${values.name} is already in contacts`);\n    } else {\n      dispatch(addContact(values));\n      Notify.success(`${values.name} added to contacts`);\n      actions.resetForm({ name: '', number: '' });\n    }\n  };\n\n  return (\n    <Container>\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={validation}\n      onSubmit={handleSubmit}\n    >\n      <StyledForm>\n        <Label>\n          <UserIcon />\n          <StyledField name=\"name\" placeholder=\"Name\" />\n          <ErrMessageStyled name=\"name\" component=\"div\" />\n        </Label>\n\n        <Label>\n          <PhoneIcon />\n          <StyledField name=\"number\" placeholder=\"Number\" />\n          <ErrMessageStyled name=\"number\" component=\"div\" />\n        </Label>\n\n        <Button type=\"submit\">Add contact</Button>\n      </StyledForm>\n    </Formik>\n  </Container>\n  )\n}\n\n\n\nexport default ContactForm;","import * as Yup from 'yup';\nimport Modal from 'react-modal';\nimport { useDispatch } from 'react-redux';\nimport { updateContact } from '../../redux/contacts/operations';\nimport { Notify } from 'notiflix';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\n\nconst ContactShema = Yup.object().shape({\n    name: Yup.string()\n      .trim()\n      .min(2, 'Too Short!')\n      .matches(\n        /^[a-zA-Zа-яА-Я]+([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$/,\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      )\n      .required('This is a required field'),\n    number: Yup.string()\n      .trim()\n      .matches(\n        /^\\+?\\d{1,4}?[ .\\-s]?(\\(\\d{1,3}?\\))?([ .\\-s]?\\d{1,4}){1,4}$/,\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      )\n      .required('This is a required field')\n      .min(9, 'Please enter at least 9 characters'),\n  });\n  \n  Modal.setAppElement('#root');\n  \n  export const CustomModalForm = ({ isOpen, onClose, userId, customStyles }) => {\n    const dispatch = useDispatch();\n    const handleSubmit = async (values, actions) => {\n      const newData = {\n        id: userId,\n        data: values,\n      };\n      dispatch(updateContact(newData));\n      Notify.success(`Contact updated`);\n      actions.resetForm({ name: '', number: '' });\n      onClose();\n    };\n  \n    return (\n      <Modal\n        isOpen={isOpen}\n        onRequestClose={onClose}\n        style={customStyles}\n        contentLabel=\"Modal Form\"\n      >\n        <button onClick={onClose}>&times;</button>\n        <h2>Please, enter new contact details:</h2>\n        <Formik\n          initialValues={{ name: '', number: '' }}\n          onSubmit={(values, actions) => {\n            handleSubmit(values, actions);\n          }}\n          validationSchema={ContactShema}\n        >\n          <Form>\n            <label>\n              Name\n              <Field name=\"name\" type=\"text\" />\n              <ErrorMessage name=\"name\" component=\"span\" />\n            </label>\n            <label>\n              Number\n              <Field name=\"number\" type=\"tel\" />\n              <ErrorMessage name=\"number\" component=\"span\" />\n            </label>\n            <button type=\"submit\">\n              Update contact\n            </button>\n          </Form>\n        </Formik>\n      </Modal>\n    );\n  };","import styled from 'styled-components';\nimport { FaTrashCan } from 'react-icons/fa6';\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 15px;\n  max-width: 100%;\n\n  background-color: #5dd7d2;\n  border: 1px solid #0daea7;\n  border-radius: 5px;\n  box-shadow: gray 1px 1px 5px;\n\n  margin: 0;\n  padding: 10px;\n  list-style: none;\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const ButtonItem = styled.button`\n  position: relative;\n\n  width: 30px;\n  height: 30px;\n  align-self: center;\n\n  padding: 10px;\n  color: white;\n  background-color: #4d83c2;\n  cursor: pointer;\n\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n`;\n\nexport const DeleteIcon = styled(FaTrashCan)`\n  position: absolute;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Text = styled.span`\n  margin: 0;\n  text-shadow: grey 2px 2px 5px;\n  font-weight: 500;\n`;","import { CustomModalForm } from 'components/CustomerModal/CustomerModal';\nimport { Notify } from 'notiflix';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { ButtonItem, ListItem, Text } from './Contact.Styled';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handlerOnClick = id => {\n    dispatch(deleteContact(id));\n    Notify.success(`Contact deleted`);\n  };\n\n  return (\n    <div>\n      <ListItem>\n        <Text>\n          {name}: {number}\n        </Text>\n        <ButtonItem type=\"button\" onClick={() => handlerOnClick(id)}>\n          Delete\n        </ButtonItem>\n        <button type=\"button\" onClick={openModal}>\n          Update\n        </button>\n        {isModalOpen && (\n          <CustomModalForm\n            isOpen={isModalOpen}\n            onClose={closeModal}\n            userId={id}\n          />\n        )}\n      </ListItem>\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { FaTrashCan } from 'react-icons/fa6';\n\nexport const List = styled.ul`\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin-bottom: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 15px;\n  max-width: 100%;\n\n  background-color: #5dd7d2;\n  border: 1px solid #0daea7;\n  border-radius: 5px;\n  box-shadow: gray 1px 1px 5px;\n\n  margin: 0;\n  padding: 10px;\n  list-style: none;\n\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const ButtonItem = styled.button`\n  position: relative;\n\n  width: 30px;\n  height: 30px;\n  align-self: center;\n\n  padding: 10px;\n  color: white;\n  background-color: #4d83c2;\n  cursor: pointer;\n\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n`;\n\nexport const DeleteIcon = styled(FaTrashCan)`\n  position: absolute;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  text-shadow: grey 2px 2px 5px;\n  font-weight: 500;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\nimport { Contact } from 'components/Contact/Contact';\nimport { List } from './ContactList.Styled';\n\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  return (\n    <List>\n      {visibleContacts.map(user => (\n        <Contact\n          key={user.id}\n          id={user.id}\n          name={user.name}\n          number={user.number}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 5px;\n  text-allign: center;\n  padding-bottom: 20px;\n`;\n\nexport const FilterTitle = styled.h3`\n  text-allign: center;\n  padding: 0 0 15px 0;\n  margin: 0;\n  text-shadow: grey 2px 2px 5px;\n`;\n\nexport const FilterInput = styled.input`\n  width: 200px;\n  height: 40px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  margin: 0;\n  padding-left: 10px;\n`;","import { useDispatch, useSelector } from \"react-redux\";\nimport { setFilter } from \"../../redux/contacts/filterSlice\";\nimport { selectFilter } from \"../../redux/contacts/selectors\";\nimport { FilterContainer, FilterInput, FilterTitle } from \"./FIlter.Styled\";\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onChangeFilter = evt => {\n    dispatch(setFilter(evt.target.value.trim()));\n  };\n\n  return (\n    <FilterContainer>\n      <FilterTitle>Find contact by name</FilterTitle>\n      <FilterInput\n        type=\"text\"\n        value={filter}\n        placeholder=\"Find by name\"\n        onChange={onChangeFilter}\n      />\n    </FilterContainer>\n  );\n};\n\nexport default Filter;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport Loader from '../components/Loader/Loader';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { selectContacts, selectError, selectIsLoading } from '../redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      {isLoading && <Loader/>}\n      {contacts.length ? (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      ) : (\n        <p>Phonebook is empty</p>\n      )}\n      {error && <span>Error! Please, reload this page!</span>}\n    </div>\n  );\n}","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);"],"names":["StyledLoader","styled","_templateObject","_taggedTemplateLiteral","_jsx","children","Hourglass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","StyledForm","Form","Container","_templateObject2","ErrMessageStyled","ErrorMessage","_templateObject3","StyledField","Field","_templateObject4","Button","_templateObject5","Label","_templateObject6","UserIcon","FaUser","_templateObject7","PhoneIcon","FaPhone","_templateObject8","validation","Yup","shape","name","min","matches","required","number","ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","Formik","initialValues","validationSchema","onSubmit","values","actions","some","contact","toLowerCase","Notify","concat","addContact","resetForm","_jsxs","placeholder","component","type","ContactShema","trim","Modal","CustomModalForm","_ref","isOpen","onClose","userId","customStyles","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","newData","_context","prev","next","id","data","updateContact","stop","_x","_x2","apply","arguments","onRequestClose","style","contentLabel","onClick","ListItem","ButtonItem","Text","FaTrashCan","Contact","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","deleteContact","handlerOnClick","List","visibleContacts","selectVisibleContacts","map","user","FilterContainer","FilterTitle","FilterInput","filter","selectFilter","value","onChange","evt","setFilter","target","Contacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","Helmet","Loader","length","_Fragment","Filter","ContactList","state","items","createSelector","includes"],"sourceRoot":""}